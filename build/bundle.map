{
  "version": 3,
  "sources": [
    "node_modules/browserify/node_modules/browser-pack/_prelude.js",
    "app/controllers/FilterController.js",
    "app/main.js",
    "app/models/BrandFilterModel.js",
    "app/models/ColourFilterModel.js",
    "app/models/SizeFilterModel.js",
    "app/router/Router.js",
    "app/templates/FilterTemplate.html",
    "app/templates/clearAllFiltersTemplate.html",
    "app/views/ClearAllFilterView.js",
    "app/views/FilterView.js"
  ],
  "names": [],
  "mappingsnvDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC1CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA",
  "file": "generated.js",
  "sourceRoot": "",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    "var FilterView = require('../views/FilterView.js')\nvar ClearAllFiltersView = require('../views/ClearAllFilterView.js');\n\nvar SizeFilterModel = require('../models/SizeFilterModel.js');\nvar BrandFilterModel = require('../models/BrandFilterModel.js');\nvar ColourFilterModel = require('../models/ColourFilterModel.js');\n\nvar Router = require('../router/Router.js');\n\nvar FilterController = {\n\n    initialise: function () {\n        Backbone.on('facet-clicked', this.renderClearAll, this);\n\n        var router = new Router();\n        router.on('route:start', this.displayViews, this);\n        Backbone.history.start();\n    },\n\n    displayViews: function (q) {\n\n        this.clearAllFiltersView();\n\n        this.sizeView();\n        this.brandView();\n        this.colourView();\n\n        if (window.location.search) {\n            this.handleQueryString(window.location.search);\n        }\n    },\n\n    handleQueryString: function (queryString) {\n        var refinements = queryString.slice(8).split('|');\n\n        _.each(refinements, function (panelData) {\n            var panelName = panelData.split(':')[0];\n            var panelValues = panelData.split(':')[1].split(',');\n\n            if (panelName == 'size') {\n                this.sizeView.updateFacet(panelValues);\n            } else if (panelName == 'colour') {\n                this.colourView.updateFacet(panelValues);\n            } else if (panelName === 'brand') {\n                this.brandView.updateFacet(panelValues);\n            }\n\n        }, this);\n    },\n\n    renderClearAll: function () {\n        this.views = [this.sizeView, this.brandView, this.colourView];\n\n        var filtersState = _.map(this.views, function (view) {\n            return view.model.get('checkboxSelected');\n        });\n\n        if (_.contains(filtersState, true)) {\n            this.clearAllFiltersView.show();\n        } else {\n            this.clearAllFiltersView.hide();\n        }\n    },\n\n    clearAllFacets: function () {\n        _.each(this.views, function (view) {\n            view.clearAllChecked();\n        });\n    },\n\n    clearAllFiltersView: function () {\n        this.clearAllFiltersView = new ClearAllFiltersView();\n        $('[data-role=\"clear-all-filters\"]').append(this.clearAllFiltersView.render().$el);\n        this.clearAllFiltersView.on('clear-all-facets', this.clearAllFacets, this);\n    },\n\n    sizeView: function () {\n        this.sizeView = new FilterView({\n            model: new SizeFilterModel()\n        });\n        $('[data-role=\"size-filter\"]').append(this.sizeView.render().$el);\n    },\n\n    brandView: function () {\n        this.brandView = new FilterView({\n            model: new BrandFilterModel()\n        });\n        $('[data-role=\"brand-filter\"]').append(this.brandView.render().$el);\n    },\n\n    colourView: function () {\n        this.colourView = new FilterView({\n            model: new ColourFilterModel()\n        });\n        $('[data-role=\"colour-filter\"]').append(this.colourView.render().$el);\n    }\n};\n\nmodule.exports = FilterController;\n",
    "var FilterController = require('../app/controllers/FilterController.js');\n\nFilterController.initialise();\n",
    "var BrandFilterModel = Backbone.Model.extend({\n    defaults: {\n        'checkboxSelected': false,\n        title: 'BRAND',\n        panelValue: 'brand_',\n        style: 'scrollable',\n        values: [{\n                value: 'ASOS',\n                id: 'brand_53'\n            }, {\n                value: 'Vero Moda',\n                id: 'brand_3098'\n            }, {\n                value: 'TFNC',\n                id: 'brand_716'\n            }, {\n                value: 'Paprika',\n                id: 'brand_12885'\n            }, {\n                value: 'Motel',\n                id: 'brand_481'\n            }, {\n                value: 'Aqua',\n                id: 'brand_12711'\n            }, {\n                value: 'Rare',\n                id: 'brand_3392'\n            }, {\n                value: 'ASOS Africa',\n                id: 'brand_12652'\n            }, {\n                value: 'Nishe',\n                id: 'brand_12767'\n            }, {\n                value: 'Beyonc',\n                id: 'brand_13194'\n            }, {\n                value: 'Dehila',\n                id: 'brand_143'\n            }, {\n                value: 'French Connection',\n                id: 'brand_224'\n            }, {\n                value: 'Coast',\n                id: 'brand_2965'\n            }, {\n                value: 'Karen Miller',\n                id: 'brand_374'\n            }, {\n                value: 'Lipsy',\n                id: 'brand_407'\n            }, {\n                value: 'Ted Baker',\n                id: 'brand_712'\n            }\n        ]\n    }\n});\n\nmodule.exports = BrandFilterModel;\n\n",
    "var ColourFilterModel = Backbone.Model.extend({\n    defaults: {\n        'checkboxSelected': false,\n        title: 'BASE COLOUR',\n        panelValue: 'base_colour_',\n        style: 'stack',\n        values: [{\n                value: 'Yellow',\n                id: 'base_colour_1'\n            }, {\n                value: 'White',\n                id: 'base_colour_2'\n            }, {\n                value: 'Red',\n                id: 'base_colour_3'\n            }, {\n                value: 'Purple',\n                id: 'base_colour_4'\n            }, {\n                value: 'Pink',\n                id: 'base_colour_5'\n            }, {\n                value: 'Orange',\n                id: 'base_colour_6'\n            }, {\n                value: 'Multie',\n                id: 'base_colour_7'\n            }, {\n                value: 'Grey',\n                id: 'base_colour_8'\n            }, {\n                value: 'Green',\n                id: 'base_colour_9'\n            }, {\n                value: 'Cream',\n                id: 'base_colour_10'\n            }, {\n                value: 'Brown',\n                id: 'base_colour_11'\n            }, {\n                value: 'Blue',\n                id: 'base_colour_12'\n            }, {\n                value: 'Black',\n                id: 'base_colour_13'\n            }, {\n                value: 'Beige',\n                id: 'base_colour_14'\n            }\n        ]\n    }\n});\n\nmodule.exports = ColourFilterModel;\n\n",
    "var SizeFilterModel = Backbone.Model.extend({\n    defaults: {\n        'checkboxSelected': false,\n        title: 'SIZE',\n        panelValue: 'size_',\n        style: 'scrollable',\n        values: [{\n                value: 'UK 4',\n                id: 'size_4'\n            }, {\n                value: 'UK 6',\n                id: 'size_6'\n            }, {\n                value: 'UK 8',\n                id: 'size_8'\n            }, {\n                value: 'UK 10',\n                id: 'size_10'\n            }, {\n                value: 'UK 12',\n                id: 'size_12'\n            }, {\n                value: 'UK 14',\n                id: 'size_14'\n            }, {\n                value: 'UK 16',\n                id: 'size_16'\n            }, {\n                value: 'UK 18',\n                id: 'size_18'\n            }, {\n                value: 'UK 22',\n                id: 'size_22'\n            }, {\n                value: 'UK 24',\n                id: 'size_24'\n            }\n        ]\n    }\n});\n\nmodule.exports = SizeFilterModel;\n",
    "var myRouter = Backbone.Router.extend({\n    routes: {\n        '': 'start'\n    }\n});\n\nmodule.exports = myRouter;\n",
    "module.exports = function(obj){\nvar __t,__p='',__j=Array.prototype.join,print=function(){__p+=__j.call(arguments,'');};\nwith(obj||{}){\n__p+='<div class=\"panel\" data-id=\"size\">\\n    <a href=\"#\" class=\"refinement-header\">\\n        <h3 class=\\'facet-name\\'>\\n        <span class=\"facet-name\">'+\n((__t=( title ))==null?'':__t)+\n' </span>\\n\\n        </h3>\\n    </a>\\n    <a href=\"#\" data-clear=\"size\" class=\"clear-filter\">Clear</a>\\n    <div class=\"options '+\n((__t=( style ))==null?'':__t)+\n' single-column\">\\n        <ul class=\\'list\\'>\\n        </ul>\\n    </div>\\n</div>';\n}\nreturn __p;\n};\n",
    "module.exports = function(obj){\nvar __t,__p='',__j=Array.prototype.join,print=function(){__p+=__j.call(arguments,'');};\nwith(obj||{}){\n__p+='<h2 class=\\'filter-title\\'>REFINE BY</h2>\\n<a href=\"#\" class=\"clear-all-filters\" data-clear=\"all\">Clear All</a>';\n}\nreturn __p;\n};\n",
    "var clearAllFiltersTemplate = require('../templates/clearAllFiltersTemplate.html');\n\nvar ClearAllFiltersView = Backbone.View.extend({\n\n    className: 'main-title',\n\n    template: _.template(clearAllFiltersTemplate()),\n\n    events: {\n        'click .clear-all-filters': 'clearAllFacets'\n    },\n\n    render: function () {\n        this.$el.append(this.template());\n        return this;\n    },\n\n    show: function () {\n        this.$('a.clear-all-filters').addClass('display');\n    },\n\n    hide: function () {\n        this.$('a.clear-all-filters').removeClass('display');\n    },\n\n    clearAllFacets: function () {\n        this.trigger('clear-all-facets');\n    }\n});\n\nmodule.exports = ClearAllFiltersView;\n\n",
    "var FilterTemplate = require('../templates/FilterTemplate.html');\n\nvar FilterView = Backbone.View.extend({\n\n    events: {\n        'click .list': 'toggleClearButton',\n        'click .clear-filter': 'clearAllChecked'\n    },\n\n    render: function () {\n\n        this.$el.append(FilterTemplate(this.model.toJSON()));\n\n        var values = this.model.get('values');\n\n        _.each(values, function (value) {\n            this.$('.list').append('<li><input type=\"checkbox\" id=' + value.id + '><label for=' + value.id + '> ' + value.value + '</label></li>');\n        }, this);\n\n        return this;\n    },\n\n    toggleClearButton: function (e) {\n\n        var checked = this.$el.find(':checked').length\n\n        if (checked) {\n            this.$('.clear-filter').addClass('display');\n            this.model.set('checkboxSelected', true);\n        } else {\n            this.$('.clear-filter').removeClass('display');\n            this.model.set('checkboxSelected', false);\n        };\n\n        Backbone.trigger('facet-clicked');\n    },\n\n    clearAllChecked: function (e) {\n        var checked = this.$el.find(':checked').attr('checked', false);\n        this.toggleClearButton();\n\n        return false;\n    },\n\n    updateFacet: function (values) {\n        _.each(values, function (value) {\n            var id = '#' + this.model.get('panelValue') + value;\n            $(id).attr('checked', true)\n        }, this);\n\n        this.toggleClearButton();\n    }\n\n});\n\nmodule.exports = FilterView;\n"
  ]
}